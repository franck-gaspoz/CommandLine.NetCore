<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFramework>net6.0</TargetFramework>
		<ImplicitUsings>enable</ImplicitUsings>
		<Nullable>enable</Nullable>
		<GenerateDocumentationFile>True</GenerateDocumentationFile>
		<Version>1.0.18.0</Version>
		<AssemblyVersion>1.0.18.0</AssemblyVersion>
		<InformationalVersion>1.0.18.0</InformationalVersion>
		<FileVersion>1.0.18.0</FileVersion>

		<RootNamespace>CommandLine.NetCore</RootNamespace>
		<AssemblyName>CommandLine.NetCore</AssemblyName>
		<NeutralLanguage>en-US</NeutralLanguage>

		<PackageId>CommandLine.NetCore</PackageId>
		<IsPackable>true</IsPackable>
		<Authors>Franck Gaspoz</Authors>
		<Company>Franck Gaspoz</Company>
		<Product>CommandLine.NetCore</Product>
		<Description>Provides support to handle command line arguments (parse, validate, command pattern) for .Net Core console applications with ANSI VT support (cursor,colors,screen size) for multi-plateform (windows, linux, osx, arm) console applications using C# and .NET Core 6 or higher</Description>
		<Copyright>(c) Franck Gaspoz 2024 Licence MIT</Copyright>
		
		<DebugType>embedded</DebugType>
		<EmbedAllSources>True</EmbedAllSources>
		<EmbedUntrackedSources>true</EmbedUntrackedSources>
		
		<PackageReleaseNotes>
`1.0.18` - 02/01/2024
- fix bug command without tag not displayed in help command list

`1.0.12,1.0.13,1.0.14,1.0.15,1.0.16,1.0.17` - 01/02/2024
- set Opt default value count to 1 (distinguish from Flag)
- fix nullable parameter identification in case of classes (string, ..)
- add command class attribute Tag,Namespace,Package + dynamic commands specification method Tag,Namespace,Package
- fix dynamic commands set injection scope
- /!\ breaking change: removed class CommandLineResult, use CommandResult instead
- add tests project
- improve help display
- fix nuget
- fix help -t behavior
- doc update

`1.0.11` - 01/10/2024 (since 12/09/2023)
- add possiblity to declare and implement a command using uniquely a fluent syntax and no class (dynamic commands)
- add support for actions with typed parameters in SyntaxExecutionDispatchMapItem
- fix value was not nullable in Param_T when T is not a class, for instance, Param{int} always had value 0 (=default(T))
- add ignore command attribute
- more properties in CommandContext
- add initialization errors collect and display
- renamings (eg. OperationResult)
- update as consts of null syntax name and null value text
- add support of dynamic and localized configuration help
- fix help support of dynamic polymorphic commands syntaxes
- doc update

`1.0.10` - 08/11/2023			
- add global option --disable-global-help + improve help output in single command mode
- add support of mapping to array parameters when possible (instead of List) in command lambda operations
			
`1.0.9` - 08/11/2023
- add support of mapping for parameters having arguments concrete values types in command lambda operation (not Opt,Param,.. but the values types inside it)
- fix bug GetValue when not setted option
- migrate help,test and get-info commands operations methods with concrete type mapping
- improve mapping errors feedback
- add SyntaxMatcherDispatcherException and subclasses

`1.0.8` - 01/14/2023
- add single command mode allowing to build an executable for only one command and eventually without the global help
- change editor config and code cleanup
- packages update

`1.0.7` - 01/13/2023
- add global option `--no-color` that turn off ansi/vt outputs
- fix auto syntax -h was not passing global arguments
- new RunCommand in current host
- improve help output
- embed symbols and sources

`1.0.6` - 01/11/2023
- fix MAJOR bug in command options parsing. Were not recongnized correctly
- `AppHostBuilder` moved to namespace `CommandLine.NetCore.Services.AppHost`
- fix auto command -h (Command.RunCommand) didn't call back configure and build delegates
- fix support of -v and --info in -h auto syntax
- doc update

`1.0.5` - 01/05/2023
- fix nupkg: adding the package to a project now deploy files Config/appSettings.core.json, LICENSE.md, README.md, assets/ascii-icon.png in your project. These files are configured as 'Content' and are deployed in the `bin` folder. 
You can remove any of these files **EXCEPT Config/appSettings.core.json** wich is mandatory since it contains the CommandLine.NetCore parser root configuration
- fix doc

`1.0.4` - 01/04/2023
- fix nupkg

`1.0.3` - 01/04/2023
- fix nupkg

`1.0.2` - 01/04/2023
- fix doc

`1.0.1` - 01/04/2023
- add CommandContext to lambda operations method
- add support of abstract classes that inherits from command
- rename OperationContext by CommandContext
- fix bug command options were always set in delegate for -h

`1.0.0` - 03/01/2023
- init
		</PackageReleaseNotes>
		<PackageProjectUrl>https://github.com/franck-gaspoz/CommandLine.NetCore</PackageProjectUrl>
		<RepositoryUrl>https://github.com/franck-gaspoz/CommandLine.NetCore</RepositoryUrl>
		<RepositoryType>git</RepositoryType>
		<PackageTags>argument-parser pattern-command console-app console-application command-line-tool command-line ansi ansi-colors vt vt100 console color shell prompt bash powershell linux csharp netcore6 cli cmd command line tool</PackageTags>
		<PackageIcon>content\assets\ascii-icon.png</PackageIcon>

		<GeneratePackageOnBuild>true</GeneratePackageOnBuild>

		<CopyLocalLockFileAssemblies>false</CopyLocalLockFileAssemblies>
		<Platforms>AnyCPU</Platforms>
		<PackageReadmeFile>content\README.md</PackageReadmeFile>
		<PackageLicenseFile>content\LICENSE.md</PackageLicenseFile>
		<PackageRequireLicenseAcceptance>True</PackageRequireLicenseAcceptance>
		<PackageFlatten>true</PackageFlatten>
		
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
		<PlatformTarget>AnyCPU</PlatformTarget>
		<Optimize>false</Optimize>
		<AllowUnsafeBlocks>true</AllowUnsafeBlocks>
	</PropertyGroup>

	<ItemGroup>
	  <Compile Remove="Services\CmdLine\Commands\CommandSpecification.cs" />
	  <Compile Remove="Services\CmdLine\Commands\DynamicCommandBuilder.cs" />
	  <Compile Remove="Services\CmdLine\Running\CommandLineResult.cs" />
	  <Compile Remove="Services\CmdLine\Running\Invokator.cs" />
	</ItemGroup>

	<ItemGroup>
	  <Content Remove="C:\Users\franc\.nuget\packages\ansivtconsole.netcore\1.0.20\contentFiles\any\net6.0\assets\example5.png" />
	  <Content Remove="C:\Users\franc\.nuget\packages\ansivtconsole.netcore\1.0.20\contentFiles\any\net6.0\assets\example6.png" />
	  <Content Remove="C:\Users\franc\.nuget\packages\ansivtconsole.netcore\1.0.20\contentFiles\any\net6.0\assets\example7.png" />
	  <Content Remove="C:\Users\franc\.nuget\packages\ansivtconsole.netcore\1.0.20\contentFiles\any\net6.0\assets\title.png" />
	</ItemGroup>

	<ItemGroup>
	  <None Remove="assets\ascii-icon.png" />
	</ItemGroup>

	<ItemGroup>
	  <Content Include="assets\ascii-icon.png">
	    <Pack>True</Pack>
		<IncludeInPackage>true</IncludeInPackage>
	    <CopyToOutputDirectory>Never</CopyToOutputDirectory>
	    <PackagePath>contentFiles/assets;content/assets;contentFiles;content</PackagePath>
	    <PackageCopyToOutput>false</PackageCopyToOutput>
	  </Content>
	  <Content Include="Config\appSettings.core.json">
		<copyToOuput>true</copyToOuput>
		<IncludeInPackage>true</IncludeInPackage>
		<BuildAction>Content</BuildAction>
		<copyToOutput>true</copyToOutput>
		<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		<CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
	    <Pack>True</Pack>
	    <PackagePath>contentFiles/Config;content/Config;lib/$(TargetFramework)/Config/;content;contentFiles</PackagePath>
	    <PackageCopyToOutput>true</PackageCopyToOutput>		
	  </Content>
	  <Content Include="LICENSE.md">
	    <CopyToOutputDirectory>Never</CopyToOutputDirectory>
	    <Pack>True</Pack>
	    <PackagePath>contentFiles/;content/</PackagePath>
	    <PackageCopyToOutput>false</PackageCopyToOutput>
	  </Content>
	  <Content Include="README.md">
	    <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
	    <Pack>True</Pack>
	    <PackagePath>contentFiles/;content/</PackagePath>
	    <PackageCopyToOutput>Never</PackageCopyToOutput>
	  </Content>
	</ItemGroup>

	<ItemGroup>
	  <PackageReference Include="AnsiVtConsole.NetCore" Version="1.0.20" />
	</ItemGroup>

	<Target Name="PostBuild" AfterTargets="PostBuildEvent">
		<Exec Command="xcopy &quot;$(ProjectDir)README.md&quot; &quot;$(SolutionDir)&quot; /Y" />
	</Target>

</Project>
